Script started on Fri 03 Mar 2017 09:42:32 PM PST
adam.lafleur@syccuxas01:~/cs162/labs/lab7> vim main.cpp
[?1049h[?1h=[2;1Hâ–½[6n[1;1H  [1;1H[1;24r[?12;25h[?12l[?25h[27m[m[H[2J[?25l[24;1H"main.cpp" 127L, 2065C[>c[1;9H[33mdelete[m first;
}

[32mvoid[m addtoList(Node *&first, Node *&last)
{[6;9HNode *newNode = [33mnew[m Node;[7;9H[32mchar[m input[[31m200[m];[8;9Hcout << [31m"Enter Data: "[m;[9;9Hcin.ignore();[10;9Hcin.get(input, [31m200[m);[11;9Hstrcpy(newNode->data, input);[12;9H[33mif[m (first == [31mNULL[m && last == [31mNULL[m)[13;9H{[14;17Hfirst = newNode;[15;17Hlast = newNode;[16;9H}[17;9H[33melse[m[18;9H{[19;17Hlast->next = newNode;[20;17Hlast = newNode;[21;9H}[22;9HnewNode->next = [31mNULL[m;[23;9HnewNode = [31mNULL[m;[24;63H72,14-21      57%[12;21H[?12l[?25h[?25l[24;1H[K[24;1H:[?12l[?25hw[?25l[?12l[?25hq[?25l[?12l[?25h[?25l"main.cpp" 127L, 2065C written
[?1l>[?12l[?25h[?1049ladam.lafleur@syccuxas01:~/cs162/labs/lab7> vim main.cppalgrind ./maing++ -o main main.cpp 
adam.lafleur@syccuxas01:~/cs162/labs/lab7> ./main 
====================================
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 1
Enter Data: Add
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 1
Enter Data: to
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 1
Enter Data: the
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 1
Enter Data: list
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 2

Add
to
the
list
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 4
====================================
adam.lafleur@syccuxas01:~/cs162/labs/lab7> ./main 
====================================
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 3

Please enter item to delete: add
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 3

Please enter item to delete: a to
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 3

Please enter item to delete: to
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 2

==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 2

==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 2 3

Please enter item to delete: Add   add
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 4 2

==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 4
====================================
adam.lafleur@syccuxas01:~/cs162/labs/lab7> ./main [14@g++ -o main main.cpp[C[9Pvim main.cppalgrind ./main
==28618== Memcheck, a memory error detector
==28618== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==28618== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==28618== Command: ./main
==28618== 
====================================
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 1
Enter Data: add
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 1
Enter Data: to
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 1
Enter Data: tjhe
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 1
Enter Data: list
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 2

add
to
tjhe
list
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 3

Please enter item to delete: to
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 2

add
tjhe
list
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 3

Please enter item to delete: the  jhe
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 2

add
list
==MENU==
1 Add to list
2 Print to list
3 Delete from list
4 Quit
Enter choice: 4
====================================
==28618== 
==28618== HEAP SUMMARY:
==28618==     in use at exit: 72,920 bytes in 2 blocks
==28618==   total heap usage: 6 allocs, 4 frees, 73,784 bytes allocated
==28618== 
==28618== LEAK SUMMARY:
==28618==    definitely lost: 216 bytes in 1 blocks
==28618==    indirectly lost: 0 bytes in 0 blocks
==28618==      possibly lost: 0 bytes in 0 blocks
==28618==    still reachable: 72,704 bytes in 1 blocks
==28618==         suppressed: 0 bytes in 0 blocks
==28618== Rerun with --leak-check=full to see details of leaked memory
==28618== 
==28618== For counts of detected and suppressed errors, rerun with: -v
==28618== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
adam.lafleur@syccuxas01:~/cs162/labs/lab7> exit
exit

Script done on Fri 03 Mar 2017 09:44:42 PM PST
